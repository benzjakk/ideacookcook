{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\benzs\\\\Documents\\\\GitHub\\\\ideacookcook\\\\src\\\\RawNTool.js\";\nimport React, { Component } from \"react\";\nimport \"./RawNTool.css\";\nimport { FaCarrot, FaCircle, FaToolbox, FaUtensilSpoon } from 'react-icons/fa';\n\nconst Tools = props => {\n  const listTs = props.L.map(tool => /*#__PURE__*/React.createElement(\"div\", {\n    className: \"RNT\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: \"180px\",\n      wordWrap: \"break-word\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 9\n    }\n  }, tool)));\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"all\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"headerrr\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }\n  }, \"Tools \", /*#__PURE__*/React.createElement(FaUtensilSpoon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 41\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"allTools\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }\n  }, listTs));\n};\n\nconst Raws = props => {\n  const listRs = props.L.map(raw => /*#__PURE__*/React.createElement(\"div\", {\n    className: \"RNT\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: \"180px\",\n      wordWrap: \"break-word\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }, raw.RawFood), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: \"50px\",\n      textAlign: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }, raw.Quantity), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: \"90px\",\n      textAlign: \"right\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }, raw.Unit)));\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"all\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"headerrr\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }\n  }, \"Ingredients \", /*#__PURE__*/React.createElement(FaCarrot, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 51\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"allRaws\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  }, listRs));\n};\n\nclass RawNTool extends Component {\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"RawNTool\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Tools, {\n      L: this.props.Ts,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Raws, {\n      L: this.props.Rs,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nexport default RawNTool;","map":{"version":3,"sources":["C:/Users/benzs/Documents/GitHub/ideacookcook/src/RawNTool.js"],"names":["React","Component","FaCarrot","FaCircle","FaToolbox","FaUtensilSpoon","Tools","props","listTs","L","map","tool","width","wordWrap","Raws","listRs","raw","RawFood","textAlign","Quantity","Unit","RawNTool","render","Ts","Rs"],"mappings":"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","sourcesContent":["import React,{Component} from \"react\";\r\nimport \"./RawNTool.css\";\r\nimport {FaCarrot, FaCircle, FaToolbox, FaUtensilSpoon} from 'react-icons/fa';\r\n\r\nconst Tools=(props)=> {\r\n    const listTs = props.L.map((tool) =>\r\n    <div className=\"RNT\">\r\n        <div style={{width:\"180px\",wordWrap:\"break-word\"}}>{tool}</div>\r\n        {/* <div style={{width:\"50px\",textAlign:\"center\"}}>{tool.Quantity}</div> */}\r\n    </div>\r\n    )\r\n    return(\r\n        <div className=\"all\">\r\n        <div className=\"headerrr\">Tools <FaUtensilSpoon/></div>            \r\n            <div className=\"allTools\">\r\n                {listTs}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst Raws=(props)=> {\r\n    const listRs = props.L.map((raw) =>\r\n    <div className=\"RNT\">\r\n        <div style={{width:\"180px\",wordWrap:\"break-word\"}}>{raw.RawFood}</div>\r\n        <div style={{width:\"50px\",textAlign:\"center\"}}>{raw.Quantity}</div>\r\n        <div style={{width:\"90px\",textAlign:\"right\"}}>{raw.Unit}</div>\r\n    </div>\r\n    )\r\n    return(\r\n        <div className=\"all\">            \r\n            <div className=\"headerrr\">Ingredients <FaCarrot/></div>\r\n            <div className=\"allRaws\">\r\n            {listRs}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nclass RawNTool extends Component {\r\n    render(){\r\n        return(\r\n            <div className=\"RawNTool\">\r\n                <Tools L={this.props.Ts}/>\r\n                <Raws L={this.props.Rs}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default RawNTool;"]},"metadata":{},"sourceType":"module"}