{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\benzs\\\\Documents\\\\GitHub\\\\ideacookcook\\\\ideacookcook\\\\src\\\\component\\\\inputwithtag.jsx\";\nimport React, { Component } from \"react\";\nimport \"./styles/inputwithloginstyles.css\";\nimport { WithContext as ReactTags } from \"react-tag-input\";\nconst KeyCodes = {\n  //comma: 188,\n  enter: 13\n};\nconst delimiters = [KeyCodes.comma, KeyCodes.enter];\n\nclass InputWithT extends Component {\n  constructor(props) {\n    super(props);\n\n    this.updateTag = () => {\n      this.setState({\n        Tag: \"asd\",\n        suggestions: this.state.Tag.map(tag => {\n          return {\n            id: tag,\n            text: tag\n          };\n        })\n      });\n    };\n\n    this.state = {\n      Tag: [],\n      suggestions: [],\n      tags: [{\n        id: \"Thailand\",\n        text: \"Thailand\"\n      }, {\n        id: \"India\",\n        text: \"India\"\n      }]\n    };\n    this.handleDelete = this.handleDelete.bind(this);\n    this.handleAddition = this.handleAddition.bind(this);\n    this.handleDrag = this.handleDrag.bind(this);\n    this.handleTagClick = this.handleTagClick.bind(this);\n  }\n\n  handleDelete(i) {\n    const {\n      tags\n    } = this.state;\n    this.setState({\n      tags: tags.filter((tag, index) => index !== i)\n    });\n  }\n\n  async handleAddition(tag) {\n    await this.setState(state => ({\n      tags: [...state.tags, tag]\n    }));\n    console.log(this.state.tags);\n  }\n\n  handleDrag(tag, currPos, newPos) {\n    const tags = [...this.state.tags];\n    const newTags = tags.slice();\n    newTags.splice(currPos, 1);\n    newTags.splice(newPos, 0, tag); // re-render\n\n    this.setState({\n      tags: newTags\n    });\n  }\n\n  handleTagClick(index) {\n    console.log(\"The tag at index \" + index + \" was clicked\");\n  }\n\n  render() {\n    this.updateTag();\n    const {\n      tags,\n      suggestions\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(ReactTags, {\n      tags: tags,\n      suggestions: suggestions,\n      delimiters: delimiters,\n      handleDelete: this.handleDelete,\n      handleAddition: this.handleAddition,\n      handleDrag: this.handleDrag,\n      handleTagClick: this.handleTagClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default InputWithT;","map":{"version":3,"sources":["C:/Users/benzs/Documents/GitHub/ideacookcook/ideacookcook/src/component/inputwithtag.jsx"],"names":["React","Component","WithContext","ReactTags","KeyCodes","enter","delimiters","comma","InputWithT","constructor","props","updateTag","setState","Tag","suggestions","state","map","tag","id","text","tags","handleDelete","bind","handleAddition","handleDrag","handleTagClick","i","filter","index","console","log","currPos","newPos","newTags","slice","splice","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport \"./styles/inputwithloginstyles.css\";\r\nimport { WithContext as ReactTags } from \"react-tag-input\";\r\n\r\nconst KeyCodes = {\r\n  //comma: 188,\r\n  enter: 13,\r\n};\r\n\r\nconst delimiters = [KeyCodes.comma, KeyCodes.enter];\r\nclass InputWithT extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      Tag: [],\r\n      suggestions: [],\r\n      tags: [\r\n        { id: \"Thailand\", text: \"Thailand\" },\r\n        { id: \"India\", text: \"India\" },\r\n      ],\r\n    };\r\n    this.handleDelete = this.handleDelete.bind(this);\r\n    this.handleAddition = this.handleAddition.bind(this);\r\n    this.handleDrag = this.handleDrag.bind(this);\r\n    this.handleTagClick = this.handleTagClick.bind(this);\r\n  }\r\n\r\n  handleDelete(i) {\r\n    const { tags } = this.state;\r\n    this.setState({\r\n      tags: tags.filter((tag, index) => index !== i),\r\n    });\r\n  }\r\n\r\n  async handleAddition(tag) {\r\n    await this.setState((state) => ({ tags: [...state.tags, tag] }));\r\n    console.log(this.state.tags);\r\n  }\r\n\r\n  handleDrag(tag, currPos, newPos) {\r\n    const tags = [...this.state.tags];\r\n    const newTags = tags.slice();\r\n\r\n    newTags.splice(currPos, 1);\r\n    newTags.splice(newPos, 0, tag);\r\n\r\n    // re-render\r\n    this.setState({ tags: newTags });\r\n  }\r\n\r\n  handleTagClick(index) {\r\n    console.log(\"The tag at index \" + index + \" was clicked\");\r\n  }\r\n\r\n  updateTag = () => {\r\n    this.setState({\r\n      Tag: \"asd\",\r\n      suggestions: this.state.Tag.map((tag) => {\r\n        return {\r\n          id: tag,\r\n          text: tag,\r\n        };\r\n      }),\r\n    });\r\n  };\r\n\r\n  render() {\r\n    this.updateTag();\r\n    const { tags, suggestions } = this.state;\r\n    return (\r\n      <div>\r\n        <ReactTags\r\n          tags={tags}\r\n          suggestions={suggestions}\r\n          delimiters={delimiters}\r\n          handleDelete={this.handleDelete}\r\n          handleAddition={this.handleAddition}\r\n          handleDrag={this.handleDrag}\r\n          handleTagClick={this.handleTagClick}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default InputWithT;\r\n"]},"metadata":{},"sourceType":"module"}