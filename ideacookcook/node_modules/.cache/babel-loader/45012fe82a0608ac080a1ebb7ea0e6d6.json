{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\benzs\\\\Documents\\\\GitHub\\\\ideacookcook\\\\ideacookcook\\\\src\\\\component\\\\inputwithtag.jsx\";\nimport React, { Component } from \"react\";\nimport \"./styles/inputwithloginstyles.css\";\nimport { WithContext as ReactTags } from \"react-tag-input\";\nconst KeyCodes = {\n  //comma: 188,\n  enter: 13\n};\nconst delimiters = [KeyCodes.comma, KeyCodes.enter];\n\nclass InputWithT extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      Tag: [],\n      suggestions: [],\n      tags: []\n    };\n    this.updateTag = this.updateTag.bind(this);\n    this.handleDelete = this.handleDelete.bind(this);\n    this.handleAddition = this.handleAddition.bind(this);\n    this.handleDrag = this.handleDrag.bind(this);\n    this.handleTagClick = this.handleTagClick.bind(this);\n  }\n\n  componentDidUpdate() {\n    this.updateTag();\n  }\n\n  handleDelete(i) {\n    const {\n      tags\n    } = this.state;\n    this.setState({\n      tags: tags.filter((tag, index) => index !== i)\n    });\n  }\n\n  async handleAddition(tag) {\n    await this.setState(state => ({\n      tags: [...state.tags, tag]\n    }));\n  }\n\n  handleDrag(tag, currPos, newPos) {\n    const tags = [...this.state.tags];\n    const newTags = tags.slice();\n    newTags.splice(currPos, 1);\n    newTags.splice(newPos, 0, tag); // re-render\n\n    this.setState({\n      tags: newTags\n    });\n  }\n\n  handleTagClick(index) {\n    console.log(\"The tag at index \" + index + \" was clicked\");\n  }\n\n  updateTag() {\n    this.setState({\n      Tag: this.props.Tag\n    });\n    this.state.suggestions = this.state.Tag.map(tag => {\n      return {\n        id: tag,\n        text: tag\n      };\n    });\n  }\n\n  render() {\n    const {\n      tags,\n      suggestions\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(ReactTags, {\n      tags: tags,\n      suggestions: suggestions,\n      delimiters: delimiters,\n      handleDelete: this.handleDelete,\n      handleAddition: this.handleAddition,\n      handleDrag: this.handleDrag,\n      handleTagClick: this.handleTagClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default InputWithT;","map":{"version":3,"sources":["C:/Users/benzs/Documents/GitHub/ideacookcook/ideacookcook/src/component/inputwithtag.jsx"],"names":["React","Component","WithContext","ReactTags","KeyCodes","enter","delimiters","comma","InputWithT","constructor","props","state","Tag","suggestions","tags","updateTag","bind","handleDelete","handleAddition","handleDrag","handleTagClick","componentDidUpdate","i","setState","filter","tag","index","currPos","newPos","newTags","slice","splice","console","log","map","id","text","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport \"./styles/inputwithloginstyles.css\";\r\nimport { WithContext as ReactTags } from \"react-tag-input\";\r\n\r\nconst KeyCodes = {\r\n  //comma: 188,\r\n  enter: 13,\r\n};\r\n\r\nconst delimiters = [KeyCodes.comma, KeyCodes.enter];\r\nclass InputWithT extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      Tag: [],\r\n      suggestions: [],\r\n      tags: [],\r\n    };\r\n    this.updateTag = this.updateTag.bind(this);\r\n    this.handleDelete = this.handleDelete.bind(this);\r\n    this.handleAddition = this.handleAddition.bind(this);\r\n    this.handleDrag = this.handleDrag.bind(this);\r\n    this.handleTagClick = this.handleTagClick.bind(this);\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    this.updateTag();\r\n  }\r\n\r\n  handleDelete(i) {\r\n    const { tags } = this.state;\r\n    this.setState({\r\n      tags: tags.filter((tag, index) => index !== i),\r\n    });\r\n  }\r\n\r\n  async handleAddition(tag) {\r\n    await this.setState((state) => ({ tags: [...state.tags, tag] }));\r\n  }\r\n\r\n  handleDrag(tag, currPos, newPos) {\r\n    const tags = [...this.state.tags];\r\n    const newTags = tags.slice();\r\n\r\n    newTags.splice(currPos, 1);\r\n    newTags.splice(newPos, 0, tag);\r\n\r\n    // re-render\r\n    this.setState({ tags: newTags });\r\n  }\r\n\r\n  handleTagClick(index) {\r\n    console.log(\"The tag at index \" + index + \" was clicked\");\r\n  }\r\n\r\n  updateTag() {\r\n    this.setState({ Tag: this.props.Tag });\r\n\r\n    this.state.suggestions = this.state.Tag.map((tag) => {\r\n      return {\r\n        id: tag,\r\n        text: tag,\r\n      };\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { tags, suggestions } = this.state;\r\n    return (\r\n      <div>\r\n        <ReactTags\r\n          tags={tags}\r\n          suggestions={suggestions}\r\n          delimiters={delimiters}\r\n          handleDelete={this.handleDelete}\r\n          handleAddition={this.handleAddition}\r\n          handleDrag={this.handleDrag}\r\n          handleTagClick={this.handleTagClick}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default InputWithT;\r\n"]},"metadata":{},"sourceType":"module"}